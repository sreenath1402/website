{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siree\\\\OneDrive\\\\Desktop\\\\student_activity_website\\\\src\\\\Election.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Election = () => {\n  _s();\n  const [selectedCandidate, setSelectedCandidate] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [results, setResults] = useState({});\n\n  // Generate random votes for each candidate initially\n  useEffect(() => {\n    const randomVotes = {\n      John: Math.floor(Math.random() * 200),\n      Mary: Math.floor(Math.random() * 200),\n      Susan: Math.floor(Math.random() * 200)\n    };\n    setResults(randomVotes);\n  }, []);\n  const handleCandidateSelect = event => {\n    setSelectedCandidate(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Submit vote to the local server\n    try {\n      const response = await fetch('/submit_vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          candidate: selectedCandidate\n        })\n      });\n      if (response.ok) {\n        // Update the results state with the new vote count for the selected candidate\n        const updatedResults = {\n          ...results\n        };\n        updatedResults[selectedCandidate] = (updatedResults[selectedCandidate] || 0) + 1;\n        setResults(updatedResults);\n        setSubmitted(true);\n      } else {\n        console.error('Failed to submit vote');\n      }\n    } catch (error) {\n      console.error('Error submitting vote:', error);\n    }\n  };\n  useEffect(() => {\n    // Draw pie chart when results are available\n    if (results && Object.keys(results).length > 0) {\n      drawChart();\n    }\n  }, [results]);\n  const drawChart = () => {\n    const ctx = document.getElementById('electionChart');\n    const labels = Object.keys(results);\n    const data = Object.values(results);\n    new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Votes',\n          data: data,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"election_background\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#FFDE59',\n          padding: '20px',\n          borderRadius: '10px',\n          width: '400px',\n          height: '300px',\n          margin: '0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Election\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"candidate\",\n              value: \"John\",\n              checked: selectedCandidate === 'John',\n              onChange: handleCandidateSelect,\n              style: {\n                marginLeft: '170px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), \"John\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"candidate\",\n              value: \"Mary\",\n              checked: selectedCandidate === 'Mary',\n              onChange: handleCandidateSelect,\n              style: {\n                marginLeft: '170px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), \"Mary\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"candidate\",\n              value: \"Susan\",\n              checked: selectedCandidate === 'Susan',\n              onChange: handleCandidateSelect,\n              style: {\n                marginLeft: '170px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), \"Susan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '10px 20px',\n              borderRadius: '5px',\n              marginTop: '10px',\n              marginLeft: '170px',\n              backgroundColor: 'blue',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thank you for your vote!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '50px',\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '10px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"electionChart\",\n        width: \"200\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Election, \"QcsLXnP83cjDt3vbu+LWT38c+B8=\");\n_c = Election;\nexport default Election;\nvar _c;\n$RefreshReg$(_c, \"Election\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Election","_s","selectedCandidate","setSelectedCandidate","submitted","setSubmitted","results","setResults","randomVotes","John","Math","floor","random","Mary","Susan","handleCandidateSelect","event","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","candidate","ok","updatedResults","console","error","Object","keys","length","drawChart","ctx","document","getElementById","labels","data","values","type","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","borderRadius","width","height","margin","textAlign","onSubmit","name","checked","onChange","marginLeft","marginTop","color","border","cursor","id","_c","$RefreshReg$"],"sources":["C:/Users/siree/OneDrive/Desktop/student_activity_website/src/Election.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst Election = () => {\r\n    const [selectedCandidate, setSelectedCandidate] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [results, setResults] = useState({});\r\n\r\n    // Generate random votes for each candidate initially\r\n    useEffect(() => {\r\n        const randomVotes = {\r\n            John: Math.floor(Math.random() * 200),\r\n            Mary: Math.floor(Math.random() * 200),\r\n            Susan: Math.floor(Math.random() * 200)\r\n        };\r\n        setResults(randomVotes);\r\n    }, []);\r\n\r\n    const handleCandidateSelect = (event) => {\r\n        setSelectedCandidate(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // Submit vote to the local server\r\n        try {\r\n            const response = await fetch('/submit_vote', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ candidate: selectedCandidate })\r\n            });\r\n            if (response.ok) {\r\n                // Update the results state with the new vote count for the selected candidate\r\n                const updatedResults = { ...results };\r\n                updatedResults[selectedCandidate] = (updatedResults[selectedCandidate] || 0) + 1;\r\n                setResults(updatedResults);\r\n                setSubmitted(true);\r\n            } else {\r\n                console.error('Failed to submit vote');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting vote:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Draw pie chart when results are available\r\n        if (results && Object.keys(results).length > 0) {\r\n            drawChart();\r\n        }\r\n    }, [results]);\r\n\r\n    const drawChart = () => {\r\n        const ctx = document.getElementById('electionChart');\r\n        const labels = Object.keys(results);\r\n        const data = Object.values(results);\r\n\r\n        new Chart(ctx, {\r\n            type: 'pie',\r\n            data: {\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: 'Votes',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='election_background'>\r\n                <br />\r\n                <div style={{ backgroundColor: '#FFDE59', padding: '20px', borderRadius: '10px', width: '400px', height: '300px', margin: '0 auto' }}>\r\n                    <h2 style={{ textAlign: 'center' }}>Election</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"candidate\" value=\"John\" checked={selectedCandidate === 'John'} onChange={handleCandidateSelect} style={{ marginLeft: '170px' }}\r\n                            />\r\n                            John\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input type=\"radio\" name=\"candidate\" value=\"Mary\" checked={selectedCandidate === 'Mary'} onChange={handleCandidateSelect} style={{ marginLeft: '170px' }}\r\n                            />\r\n                            Mary\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input type=\"radio\" name=\"candidate\" value=\"Susan\" checked={selectedCandidate === 'Susan'} onChange={handleCandidateSelect} style={{ marginLeft: '170px' }} />\r\n                            Susan\r\n                        </label>\r\n                        <br />\r\n                        <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '5px', marginTop: '10px', marginLeft: '170px', backgroundColor: 'blue', color: 'white', border: 'none', cursor: 'pointer' }}>Vote</button>\r\n                    </form>\r\n\r\n                    {submitted && <p>Thank you for your vote!</p>}\r\n                </div>\r\n            </div>\r\n            {/* Display pie chart */}\r\n            <div style={{ marginTop: '50px', backgroundColor: 'white', padding: '20px', borderRadius: '10px', textAlign: 'center' }}>\r\n                <canvas id=\"electionChart\" width=\"200\" height=\"200\"></canvas>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Election;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}